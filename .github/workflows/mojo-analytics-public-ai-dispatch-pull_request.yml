name: "\U0001F500 InfraStream Bot"
run-name: ""
"on":
  issue_comment:
    types:
      - created
  issues:
    types:
      - opened
      - reopened
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  pull_request_review:
    types:
      - submitted
  pull_request_review_comment:
    types:
      - created
jobs:
  debugger:
    runs-on:
      - ubuntu-latest
    steps:
      - name: Print context for debugging
        run: env | grep '^DEBUG_'
        env:
          DEBUG_event: ${{ toJSON(github.event) }}
          DEBUG_event__action: ${{ github.event.action }}
          DEBUG_event__comment__author_association: ${{ github.event.comment.author_association }}
          DEBUG_event__issue__author_association: ${{ github.event.issue.author_association }}
          DEBUG_event__pull_request__author_association: ${{ github.event.pull_request.author_association }}
          DEBUG_event__review__author_association: ${{ github.event.review.author_association }}
          DEBUG_event_name: ${{ github.event_name }}
    permissions:
      contents: read
    if: ${{ fromJSON(vars.DEBUG || vars.ACTIONS_STEP_DEBUG || false) }}
  dispatch:
    runs-on:
      - ubuntu-latest
    steps:
      - id: extract-command
        name: Extract Command
        uses: actions/github-script@v7
        with:
          script: |2
            const request = process.env.REQUEST;
            const eventType = process.env.EVENT_TYPE
            core.setOutput('request', request);

            if (request.startsWith("@infrastream-bot /review")) {
              core.setOutput('command', 'review');
              const additionalContext = request.replace(/^@infrastream-bot \/review/, '').trim();
              core.setOutput('additional_context', additionalContext);
            } else if (request.startsWith("@infrastream-bot")) {
              core.setOutput('command', 'invoke');
              const additionalContext = request.replace(/^@infrastream-bot/, '').trim();
              core.setOutput('additional_context', additionalContext);
            } else if (['pull_request.opened', 'pull_request.reopened', 'pull_request.synchronize'].includes(eventType)) {
              core.setOutput('command', 'helper');
            } else {
              core.setOutput('command', 'fallthrough');
            }
        env:
          EVENT_TYPE: ${{ github.event_name }}.${{ github.event.action }}
          REQUEST: ${{ github.event.comment.body || github.event.review.body || github.event.issue.body }}
      - name: Acknowledge request
        run: gh issue comment "${ISSUE_NUMBER}" --body "${MESSAGE}" --repo "${REPOSITORY}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.pull_request.number || github.event.issue.number }}
          MESSAGE: "\U0001F916 Hi @${{ github.actor }}, I've received your request, and I'm working on it now! You can track my progress [in the logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details."
          REPOSITORY: ${{ github.repository }}
    outputs:
      additional_context: ${{ steps.extract-command.outputs.additional_context }}
      command: ${{ steps.extract-command.outputs.command }}
      issue_number: ${{ github.event.pull_request.number || github.event.issue.number }}
      request: ${{ steps.extract-command.outputs.request }}
    permissions:
      contents: read
      issues: write
      pull-requests: write
    if: |2-
      (
      	github.event_name == 'pull_request' &&
      	github.event.pull_request.head.repo.fork == false
      ) || (
      	github.event.sender.type == 'User' &&
      	startsWith(github.event.comment.body || github.event.review.body || github.event.issue.body, '@infrastream-bot') &&
      	contains(fromJSON('["OWNER", "MEMBER", "COLLABORATOR", "CONTRIBUTOR"]'), github.event.comment.author_association || github.event.review.author_association || github.event.issue.author_association)
      ) || (
      	github.event_name == 'issues' &&
      	contains(fromJSON('["opened", "reopened"]'), github.event.action)
      )
  fallthrough:
    runs-on:
      - ubuntu-latest
    steps:
      - name: Send failure comment
        run: gh issue comment "${ISSUE_NUMBER}" --body "${MESSAGE}" --repo "${REPOSITORY}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.pull_request.number || github.event.issue.number }}
          MESSAGE: "\U0001F916 I'm sorry @${{ github.actor }}, but I was unable to process your request. Please [see the logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details"
          REPOSITORY: ${{ github.repository }}
    needs:
      - debugger
      - dispatch
      - helper
      - invoke
      - review
    permissions:
      contents: read
      issues: write
      pull-requests: write
    if: ${{ always() && !cancelled() && (failure() || needs.dispatch.outputs.command == 'fallthrough') }}
  helper:
    needs:
      - dispatch
    permissions:
      contents: read
      id-token: write
      issues: write
      pull-requests: write
    if: ${{ needs.dispatch.outputs.command == 'helper' }}
    with:
      additional_context: ${{ needs.dispatch.outputs.additional_context }}
    secrets: inherit
    uses: ./.github/workflows/mojo-analytics-public-ai-helper-pull_request.yml
  invoke:
    needs:
      - dispatch
    permissions:
      contents: read
      id-token: write
      issues: write
      pull-requests: write
    if: ${{ needs.dispatch.outputs.command == 'invoke' }}
    with:
      additional_context: ${{ needs.dispatch.outputs.additional_context }}
    secrets: inherit
    uses: ./.github/workflows/mojo-analytics-public-ai-invoke-pull_request.yml
  review:
    needs:
      - dispatch
    permissions:
      contents: read
      id-token: write
      issues: write
      pull-requests: write
    if: ${{ needs.dispatch.outputs.command == 'review' }}
    with:
      additional_context: ${{ needs.dispatch.outputs.additional_context }}
    secrets: inherit
    uses: ./.github/workflows/mojo-analytics-public-ai-review-pull_request.yml
permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write
defaults:
  run:
    shell: bash
